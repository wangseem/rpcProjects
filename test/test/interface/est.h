/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 *
 * est.h
 * 2023-10-16 15:23:06
 * Generated by rocket framework rocket_generator.py
 * File will not generate while exist
 * Allow editing
****************************************************/

#ifndef ./TEST_INTERFACE_EST_H
#define ./TEST_INTERFACE_EST_H 

#include <rocket/net/rpc/rpc_closure.h>
#include "./test/pb/./test.pb.h"
#include "./test/interface/interface.h"


namespace ./test {

/*
 * Rpc Interface Class
 * Alloc one object every time RPC call begin, and destroy this object while RPC call end
*/

class testInterface : public Interface {
 public:

  testInterface(const ::testreq* request, ::testres* response, 
    rocket::RpcClosure* done, rocket::RpcController* controller);

  ~testInterface();

 public:
  // core business deal method
  virtual void run() override;

  // set error code and error into to response message
  virtual void setError(int code, const std::string& err_info) override;

 private:
  const ::testreq* m_request {NULL};       // request object fron client

  ::testres* m_response {NULL};           // response object that reply to client

};


}


#endif